{
  "name": "Garbage",
  "scopeName": "source.garbage",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#types"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [{
        "name": "keyword.control.garbage",
        "match": "\\b(if|else|while|for|return|say)\\b"
      }]
    },
    "strings": {
      "name": "string.quoted.double.garbage",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.garbage",
          "match": "\\\\."
        }
      ]
    },
    "comments": {
      "name": "comment.line.double-slash.garbage",
      "match": "//.*$"
    },
    "numbers": {
      "name": "constant.numeric.garbage",
      "match": "\\b[0-9]+\\b"
    },
    "functions": {
      "patterns": [{
        "name": "support.function.garbage",
        "match": "@(socket_create|socket_bind|socket_listen|socket_accept|socket_read|socket_write|socket_close|print_int|print_char|print_buf)\\b"
      }]
    },
    "types": {
      "patterns": [{
        "name": "storage.type.garbage",
        "match": "\\b(u8|u64)\\b"
      },
      {
        "name": "storage.type.array.garbage",
        "match": "\\[\\d+\\](u8|u64)"
      }]
    },
    "variables": {
      "patterns": [{
        "name": "variable.other.garbage",
        "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
      }]
    },
    "operators": {
      "patterns": [{
        "name": "keyword.operator.garbage",
        "match": "(=|>|<|\\+|-|\\*|/|%|\\[|\\])"
      }]
    }
  }
}